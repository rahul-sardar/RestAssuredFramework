pipeline 
{
    agent any
    
    tools{
    	maven 'Maven'
        }
        
    environment{
		BUILD_NUMBER = "${BUILD_NUMBER}"
	}

    stages 
    {
        stage('Build') 
        {
            steps
            {
                 git 'https://github.com/jglick/simple-maven-project-with-tests.git'
                 sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }
            post 
            {
                success
                {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
        
        
        
        stage("Deploy to QA"){
            steps{
                echo("deploy to qa done")
            }
        }
                
        stage('Run Regression API Automation Test With Docker Image') {
            steps {
				script{
					def exitCode=  sh(script: "docker run --name apitesting${BUILD_NUMBER} -e MAVEN_OPTS= \"-Dsurefire.suiteXmlFiles=src/test/resources/Runner/testng_regression.xml\" iamrahul1408/restautomationframeworkdocker", returnStatus: true)
						if(exitCode !=0){
							currentBuild.result = 'FAILURE' //Mark the build as failed if tests fail
						}
						
						sh "docker start apitesting${BUILD_NUMBER}"
						sh "docker cp apitesting${BUILD_NUMBER}:/app/reports/APIExecutionReport.html ${WORKSPACE}/reports"
						sh "docker rm -f apitesting${BUILD_NUMBER}"
				}
                
            }
        }
                
        
        stage('Publish Extent Report'){
            steps{
                     publishHTML([allowMissing: false,
                                  alwaysLinkToLastBuild: false, 
                                  keepAll: false, 
                                  reportDir: 'reports', 
                                  reportFiles: 'APIExecutionReport.html', 
                                  reportName: 'API HTML Extent Report', 
                                  reportTitles: ''])
            }
        }
        
        
         stage("Deploy to STAGE"){
            steps{
                echo("deploy to STAGE done")
            }
        }
        
        stage('Sanity Automation Test') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    git 'https://github.com/rahul-sardar/RestAssuredFramework.git'
                    sh "mvn clean test -Dsurefire.suiteXmlFiles=src/test/resources/Runner/testng_sanity.xml"
                    
                }
            }
        }
        
        
         stage('Publish Extent Report after sanity'){
            steps{
                     publishHTML([allowMissing: false,
                                  alwaysLinkToLastBuild: false, 
                                  keepAll: false, 
                                  reportDir: 'reports', 
                                  reportFiles: 'APIExecutionReport.html', 
                                  reportName: 'API HTML Extent Report', 
                                  reportTitles: ''])
            }
        }
        
        
        stage("Deploy to PROD"){
            steps{
                echo("deploy to PROD")
            }
        }
    }
} 